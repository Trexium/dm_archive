@using DungeonMastersArchive.Models.Article
@using DungeonMastersArchive.Services

@inject IUserService UserService
@inject IArticleService ArticleService
@inject IImageService ImageService



@if (_model != null && _model.Any())
{
    <MudStack>
        <MudCarousel Class="mud-width-full" @ref="_carousel" ItemsSource="@_model" @bind-SelectedIndex="_carouselIndex" Style="height:15lh;" BulletsColor="Color.Tertiary" ShowArrows="true" ShowBullets="true" EnableSwipeGesture="true" AutoCycle="false">
            <ItemTemplate>
                <div class="d-flex flex-column flex-column justify-center" style="height:100%">
                    <MudStack Class="rounded">
                        <MudButton OnClick="@(() => ShowImagePopup())" Class="pa-0">
                            <MudImage Class="d-flex flex-grow-1 flex-wrap justify-center align-center" Src="@ImageService.GetImageUrl(context)" ObjectFit="ObjectFit.Cover" Elevation="25" Alt="@context.Title" />
                        </MudButton>
                    </MudStack>
                </div>
            </ItemTemplate>
        </MudCarousel>
        <MudStack Row="true">
            <MudSpacer />
            <MudText Class="pa-2" Align="@Align.Center">@_model[_carouselIndex].Title</MudText>
            <MudSpacer />
        </MudStack>
    </MudStack>

    <MudOverlay @bind-Visible="_overlayVisible" DarkBackground AutoClose="true" OnClosed="OnOverlayClosed" ZIndex="9998" Class="d-flex">
        
        <MudPaper Class="d-flex flex-column flex-column justify-center" Style="width: 99rem;">
            <MudCarousel Style="height:50rem; font-size:50px;" BulletsColor="Color.Tertiary" ItemsSource="@_model" @bind-SelectedIndex="_carouselIndex" ShowArrows="true" ShowBullets="true" EnableSwipeGesture="true" AutoCycle="false">
                <ItemTemplate>
                    <div class="d-flex flex-column flex-column justify-center" style="height:100%">
                        <MudStack>
                            <MudImage Class="d-flex flex-grow-1 justify-center align-center" Src="@ImageService.GetImageUrl(context)" ObjectFit="ObjectFit.Contain" Elevation="25" Alt="@context.Title" />
                            
                        </MudStack>
                    </div>
                </ItemTemplate>
            </MudCarousel>
        </MudPaper>
        <MudStack Row="true">
            <MudSpacer />
            <MudText Typo="Typo.h2" Class="pa-2" Align="@Align.Center">@_model[_carouselIndex].Title</MudText>
            <MudSpacer />
        </MudStack>
    </MudOverlay>



}

@code {
    [Parameter]
    public int ArticleId { get; set; }

    private Models.User.User _user;
    private List<ArticleImageMetadata> _model;

    private MudCarousel<ArticleImageMetadata>? _carousel;
    private MudCarousel<ArticleImageMetadata>? _messageBoxCarousel;
    private MudMessageBox _mudMessageBox;


    private int _carouselIndex;
    private bool _overlayVisible = false;

    protected override async Task OnInitializedAsync()
    {

    }

    protected override async Task OnParametersSetAsync()
    {
        _user = await UserService.GetCurrentUser();
        _model = await ArticleService.GetArticleImages(ArticleId);
    }

    public void OnOverlayClosed()
    {

    }

    public void ShowImagePopup()
    {
        _overlayVisible = true;
        StateHasChanged();
    }
}
