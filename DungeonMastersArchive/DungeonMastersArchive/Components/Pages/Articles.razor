@page "/articles"
@using DungeonMastersArchive.Models;
@using DungeonMastersArchive.Services

@inject IArticleService ArticleService
@inject ISnackbar Snackbar

<h3>Artiklar</h3>


<div class="d-flex flex-row">
    <MudPaper Class="flex-grow-1 pa-16 ma-2" Elevation="3">
        <MudTable T="Models.Article" Items="@_articles">
            <HeaderContent>
                <MudTh>Artikel</MudTh>
                <MudTh>Typ</MudTh>
                <MudTh>Publicerad?</MudTh>
                <MudTh>Åtgärder</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Artikel">@context.ArticleName</MudTd>
                <MudTd DataLabel="Typ">@context.ArticleTypeDisplayText</MudTd>
                <MudTd DataLabel="Publicerad?">
                    @if (context.IsPublished)
                    {
                        <MudChip T="string" Icon="@Icons.Material.Filled.Public" Color="Color.Success">Ja</MudChip>
                    }
                    else 
                    {
                        <MudChip T="string" Icon="@Icons.Material.Filled.PublicOff">Nej</MudChip>
                    }
                </MudTd>
                <MudTd DataLabel="Åtgärder">
                    <MudIconButton Icon="@Icons.Material.Filled.Edit" Href="@GetEditLink(context.Id.Value)" />
                    <MudIconButton Icon="@Icons.Material.Filled.Delete" OnClick="() => DeleteArticle(context.Id.Value)" />
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
    </MudPaper>


    <MudPaper Class=" pa-6 ma-2" Elevation="3">
        <MudButtonGroup Vertical="true">
            <MudButton StartIcon="@Icons.Material.Filled.PostAdd" Href="/edit-article">Ny Artikel</MudButton>
            <MudButton StartIcon="@Icons.Material.Filled.PostAdd" Href="/">En knapp</MudButton>
            <MudButton StartIcon="@Icons.Material.Filled.PostAdd" Href="/">En knapp med längre text</MudButton>
        </MudButtonGroup>
    </MudPaper>
</div>





@code {
    private List<Models.Article> _articles;

    private string GetEditLink(int id){
        return $"/edit-article/{id}";
    }

    private async Task DeleteArticle(int id){
        if (await ArticleService.DeleteArticle(id)){
            Snackbar.Add($"Artikeln har tagits bort.", Severity.Success);
        }
        else {
            Snackbar.Add($"Ett problem inträffade när artikeln skulle tas bort.", Severity.Error);
        }
    
    }

    protected override async Task OnInitializedAsync()
    {

    }

    protected override async Task OnParametersSetAsync()
    {
        _articles = await ArticleService.GetArticles();
    }
}

